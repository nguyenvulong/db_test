services:
  postgres-master:
    image: postgres:15
    container_name: postgres-master
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./setup-master.sql:/docker-entrypoint-initdb.d/setup.sql
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
      - pg-master-data:/var/lib/postgresql/data
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d demo_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_replication_slots=10"
      - "-c"
      - "max_wal_senders=10"

  postgres-replica:
    image: postgres:15
    container_name: postgres-replica
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - ./setup-replica.sql:/docker-entrypoint-initdb.d/setup.sql
      - pg-replica-data:/var/lib/postgresql/data
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d demo_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      postgres-master:
        condition: service_healthy

volumes:
  pg-master-data:
  pg-replica-data:

networks:
  postgres-net:
